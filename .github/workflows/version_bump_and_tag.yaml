name: Version bump and tag workflow

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  commit-check:
    name: Get commit counts
    runs-on: ubuntu-latest
    outputs:
      root_commits: ${{ steps.commit-count.outputs.root }}
      core_commits: ${{ steps.commit-count.outputs.core }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all tags

      - name: Get latest repo tag
        id: get-tag
        run: |
          echo "tag=$(git describe --tags --abbrev=0 || echo '')" >> $GITHUB_OUTPUT

      - name: Get commit counts
        id: commit-count
        run: |
          TAG=${{ steps.get-tag.outputs.tag }}
          if [ -z "$TAG" ]; then TAG=""; fi
          echo "tag=$TAG"
          echo "root=$(git rev-list $TAG..HEAD -- . | wc -l)" >> $GITHUB_OUTPUT
          echo "core=$(git rev-list $TAG..HEAD -- packages/core | wc -l)" >> $GITHUB_OUTPUT

  bump-and-build:
    name: Bump and Build TS SDKs
    needs: [commit-check]
    runs-on: ubuntu-latest
    if: needs.commit-check.outputs.root_commits != '0'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Setup Node.js if needed
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: "Configure npm"
      #   run: |
      #     npm config set //npm.pkg.github.com/:_authToken ${{secrets.ACCESS_TOKEN}}

      - name: Install npm dependencies and build all packages
        run: |
          npm ci
          npx lerna run build

      - name: Bump version and build Core SDK
        if: needs.commit-check.outputs.core_commits != '0'
        run: |
          cd packages/core
          npm version patch --no-git-tag-version
          npm run build
          echo CORE_CURRENT_VERSION=$(node -p "require('./package.json').version") >> "$GITHUB_ENV"

      - name: "Configure Git"
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions"

      - name: Publish Core publish
        if: needs.commit-check.outputs.core_commits != '0'
        run: |
          cd packages/core
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Commit Repo Changes"
        if: needs.commit-check.outputs.core_commits != '0'
        run: |
          git commit -am "chore: release main" --no-verify

      - name: "Tag Repo - Core"
        if: needs.commit-check.outputs.core_commits != '0'
        run: |
          git tag -a core-v${{ env.CORE_CURRENT_VERSION }} -m "Version core-v${{ env.CORE_CURRENT_VERSION }}"
          git push origin v${{ env.CORE_CURRENT_VERSION }} --no-verify

      - name: "Push Repo"
        if: needs.commit-check.outputs.core_commits != '0'
        run: |
          git push --no-verify
