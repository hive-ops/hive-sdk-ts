name: Tag and Publish workflow

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  determine-packages:
    name: Determine workspaces and changes
    runs-on: ubuntu-latest
    outputs:
      workspaces: ${{ steps.set-matrix.outputs.workspaces }}
      changed_workspaces: ${{ steps.set-matrix.outputs.changed_workspaces }}
      has_root_changes: ${{ steps.set-matrix.outputs.has_root_changes }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute workspace matrix and change set
        id: set-matrix
        shell: bash
        run: |
          set -euo pipefail

          TAG=$(git describe --tags --abbrev=0 || echo "")
          echo "Latest tag: $TAG"

          # Read workspaces from root package.json (string array)
          WORKSPACES_JSON=$(node -e "console.log(JSON.stringify(require('./package.json').workspaces || []))")
          echo "workspaces from package.json: $WORKSPACES_JSON"

          # Expand patterns into real package directories that contain a package.json
          mapfile -t PATTERNS < <(node -e "(require('./package.json').workspaces||[]).forEach(s=>console.log(s))")

          MATRIX="["; SEP=""
          CHANGED="["; CSEP=""

          for pat in "${PATTERNS[@]}"; do
            # Bash will expand any globs here
            for dir in $pat; do
              if [ -f "$dir/package.json" ]; then
                name=$(node -p "require('./${dir}/package.json').name")
                id=$(basename "$dir")
                if [ -n "$TAG" ]; then
                  commits=$(git rev-list "$TAG"..HEAD -- "$dir" | wc -l | tr -d ' ')
                else
                  commits=$(git rev-list HEAD -- "$dir" | wc -l | tr -d ' ')
                fi

                MATRIX+="$SEP{\"path\":\"$dir\",\"id\":\"$id\",\"pkg_name\":\"$name\"}"
                SEP="," 

                if [ "$commits" != "0" ]; then
                  CHANGED+="$CSEP{\"path\":\"$dir\",\"id\":\"$id\",\"pkg_name\":\"$name\"}"
                  CSEP="," 
                fi
              fi
            done
          done
          MATRIX+="]"
          CHANGED+="]"

          if [ -n "$TAG" ]; then
            ROOT_COMMITS=$(git rev-list "$TAG"..HEAD -- . | wc -l | tr -d ' ')
          else
            ROOT_COMMITS=$(git rev-list HEAD -- . | wc -l | tr -d ' ')
          fi
          HAS_ROOT_CHANGES=false
          if [ "$ROOT_COMMITS" != "0" ]; then HAS_ROOT_CHANGES=true; fi

          echo "workspaces=$MATRIX" >> "$GITHUB_OUTPUT"
          echo "changed_workspaces=$CHANGED" >> "$GITHUB_OUTPUT"
          echo "has_root_changes=$HAS_ROOT_CHANGES" >> "$GITHUB_OUTPUT"

          echo "Workspace matrix: $MATRIX"
          echo "Changed workspace matrix: $CHANGED"
          echo "Has root changes: $HAS_ROOT_CHANGES"

  build:
    name: Build packages
    needs: [determine-packages]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJSON(needs.determine-packages.outputs.workspaces) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install npm dependencies
        run: npm ci

      - name: Build all packages (ensure cross-package deps are compiled)
        run: npx lerna run build

      - name: Build current package explicitly
        working-directory: ${{ matrix.pkg.path }}
        run: npm run build

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg.id }}-artifacts
          path: |
            ${{ matrix.pkg.path }}/lib
            ${{ matrix.pkg.path }}/package*.json
          retention-days: 1

  publish-and-tag:
    name: Publish and Tag changed packages
    needs: [determine-packages, build]
    runs-on: ubuntu-latest
    if: needs.determine-packages.outputs.has_root_changes == 'true' && needs.build.result == 'success'
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJSON(needs.determine-packages.outputs.changed_workspaces) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Download artifacts for package
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.pkg.id }}-artifacts
          path: ./artifacts/${{ matrix.pkg.id }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions"

      - name: Apply artifacts to workspace
        run: |
          mkdir -p ./${{ matrix.pkg.path }}
          cp -r ./artifacts/${{ matrix.pkg.id }}/* ./${{ matrix.pkg.path }}/

      - name: Publish package to npm
        working-directory: ${{ matrix.pkg.path }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --provenance --access public

      - name: Tag package version and push
        working-directory: ${{ matrix.pkg.path }}
        run: |
          VERSION=$(node -p "require('./package.json').version")
          TAG="${{ matrix.pkg.id }}-v${VERSION}"
          MSG="${{ matrix.pkg.pkg_name }}-v${VERSION}"
          git tag -a "$TAG" -m "$MSG"
          git push origin --tags --no-verify
