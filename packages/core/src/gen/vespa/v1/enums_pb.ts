// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file vespa/v1/enums.proto (package vespa.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { EnumValueOptions, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum vespa.v1.ColumnType
 */
export enum ColumnType {
  /**
   * @generated from enum value: COLUMN_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Binary large object (bytes)
   *
   * @generated from enum value: COLUMN_TYPE_BLOB = 1;
   */
  BLOB = 1,

  /**
   * true or false
   *
   * @generated from enum value: COLUMN_TYPE_BOOLEAN = 2;
   */
  BOOLEAN = 2,

  /**
   * 32-bit IEEE-754 floating point
   *
   * @generated from enum value: COLUMN_TYPE_FLOAT = 3;
   */
  FLOAT = 3,

  /**
   * 32-bit signed int
   *
   * @generated from enum value: COLUMN_TYPE_INTEGER = 4;
   */
  INTEGER = 4,

  /**
   * UTF-8 encoded string
   *
   * @generated from enum value: COLUMN_TYPE_TEXT = 5;
   */
  TEXT = 5,

  /**
   * Date and time in ISO 8601 format
   *
   * @generated from enum value: COLUMN_TYPE_TIMESTAMP = 6;
   */
  TIMESTAMP = 6,

  /**
   * JSON object
   *
   * @generated from enum value: COLUMN_TYPE_JSON = 7;
   */
  JSON = 7,

  /**
   * Date in ISO 8601 format
   *
   * @generated from enum value: COLUMN_TYPE_DATE = 8;
   */
  DATE = 8,

  /**
   * Time in ISO 8601 format
   *
   * @generated from enum value: COLUMN_TYPE_TIME = 9;
   */
  TIME = 9,

  /**
   * Timestamp with timezone
   *
   * @generated from enum value: COLUMN_TYPE_TIMESTAMP_WITH_TZ = 10;
   */
  TIMESTAMP_WITH_TZ = 10,

  /**
   * Enum value expressed as unsigned int
   *
   * @generated from enum value: COLUMN_TYPE_ENUM = 11;
   */
  ENUM = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(ColumnType)
proto3.util.setEnumType(ColumnType, "vespa.v1.ColumnType", [
  { no: 0, name: "COLUMN_TYPE_UNSPECIFIED" },
  { no: 1, name: "COLUMN_TYPE_BLOB" },
  { no: 2, name: "COLUMN_TYPE_BOOLEAN" },
  { no: 3, name: "COLUMN_TYPE_FLOAT" },
  { no: 4, name: "COLUMN_TYPE_INTEGER" },
  { no: 5, name: "COLUMN_TYPE_TEXT" },
  { no: 6, name: "COLUMN_TYPE_TIMESTAMP" },
  { no: 7, name: "COLUMN_TYPE_JSON" },
  { no: 8, name: "COLUMN_TYPE_DATE" },
  { no: 9, name: "COLUMN_TYPE_TIME" },
  { no: 10, name: "COLUMN_TYPE_TIMESTAMP_WITH_TZ" },
  { no: 11, name: "COLUMN_TYPE_ENUM" },
]);

/**
 * @generated from enum vespa.v1.VespaDatabaseStatusAtNode
 */
export enum VespaDatabaseStatusAtNode {
  /**
   * @generated from enum value: VESPA_DATABASE_STATUS_AT_NODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VESPA_DATABASE_STATUS_AT_NODE_CREATING = 1;
   */
  CREATING = 1,

  /**
   * @generated from enum value: VESPA_DATABASE_STATUS_AT_NODE_BOOTING = 2;
   */
  BOOTING = 2,

  /**
   * @generated from enum value: VESPA_DATABASE_STATUS_AT_NODE_SYNCHRONIZING = 3;
   */
  SYNCHRONIZING = 3,

  /**
   * @generated from enum value: VESPA_DATABASE_STATUS_AT_NODE_READY = 4;
   */
  READY = 4,

  /**
   * @generated from enum value: VESPA_DATABASE_STATUS_AT_NODE_FAILED = 5;
   */
  FAILED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(VespaDatabaseStatusAtNode)
proto3.util.setEnumType(VespaDatabaseStatusAtNode, "vespa.v1.VespaDatabaseStatusAtNode", [
  { no: 0, name: "VESPA_DATABASE_STATUS_AT_NODE_UNSPECIFIED" },
  { no: 1, name: "VESPA_DATABASE_STATUS_AT_NODE_CREATING" },
  { no: 2, name: "VESPA_DATABASE_STATUS_AT_NODE_BOOTING" },
  { no: 3, name: "VESPA_DATABASE_STATUS_AT_NODE_SYNCHRONIZING" },
  { no: 4, name: "VESPA_DATABASE_STATUS_AT_NODE_READY" },
  { no: 5, name: "VESPA_DATABASE_STATUS_AT_NODE_FAILED" },
]);

/**
 * @generated from enum vespa.v1.ComparisonOperator
 */
export enum ComparisonOperator {
  /**
   * @generated from enum value: COMPARISON_OPERATOR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_EQUAL = 101;
   */
  EQUAL = 101,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_NOT_EQUAL = 102;
   */
  NOT_EQUAL = 102,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_GREATER_THAN = 103;
   */
  GREATER_THAN = 103,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_LESS_THAN = 104;
   */
  LESS_THAN = 104,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_GREATER_THAN_OR_EQUALS = 105;
   */
  GREATER_THAN_OR_EQUALS = 105,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_LESS_THAN_OR_EQUALS = 106;
   */
  LESS_THAN_OR_EQUALS = 106,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_LIKE = 201;
   */
  LIKE = 201,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_NOT_LIKE = 202;
   */
  NOT_LIKE = 202,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_IN = 203;
   */
  IN = 203,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_NOT_IN = 204;
   */
  NOT_IN = 204,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_IS_NULL = 205;
   */
  IS_NULL = 205,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_IS_NOT_NULL = 206;
   */
  IS_NOT_NULL = 206,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_IS = 207;
   */
  IS = 207,

  /**
   * @generated from enum value: COMPARISON_OPERATOR_IS_NOT = 208;
   */
  IS_NOT = 208,
}
// Retrieve enum metadata with: proto3.getEnumType(ComparisonOperator)
proto3.util.setEnumType(ComparisonOperator, "vespa.v1.ComparisonOperator", [
  { no: 0, name: "COMPARISON_OPERATOR_UNSPECIFIED" },
  { no: 101, name: "COMPARISON_OPERATOR_EQUAL" },
  { no: 102, name: "COMPARISON_OPERATOR_NOT_EQUAL" },
  { no: 103, name: "COMPARISON_OPERATOR_GREATER_THAN" },
  { no: 104, name: "COMPARISON_OPERATOR_LESS_THAN" },
  { no: 105, name: "COMPARISON_OPERATOR_GREATER_THAN_OR_EQUALS" },
  { no: 106, name: "COMPARISON_OPERATOR_LESS_THAN_OR_EQUALS" },
  { no: 201, name: "COMPARISON_OPERATOR_LIKE" },
  { no: 202, name: "COMPARISON_OPERATOR_NOT_LIKE" },
  { no: 203, name: "COMPARISON_OPERATOR_IN" },
  { no: 204, name: "COMPARISON_OPERATOR_NOT_IN" },
  { no: 205, name: "COMPARISON_OPERATOR_IS_NULL" },
  { no: 206, name: "COMPARISON_OPERATOR_IS_NOT_NULL" },
  { no: 207, name: "COMPARISON_OPERATOR_IS" },
  { no: 208, name: "COMPARISON_OPERATOR_IS_NOT" },
]);

/**
 * @generated from enum vespa.v1.LogicalOperator
 */
export enum LogicalOperator {
  /**
   * @generated from enum value: LOGICAL_OPERATOR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOGICAL_OPERATOR_AND = 1;
   */
  AND = 1,

  /**
   * @generated from enum value: LOGICAL_OPERATOR_OR = 2;
   */
  OR = 2,

  /**
   * @generated from enum value: LOGICAL_OPERATOR_NOT = 3;
   */
  NOT = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(LogicalOperator)
proto3.util.setEnumType(LogicalOperator, "vespa.v1.LogicalOperator", [
  { no: 0, name: "LOGICAL_OPERATOR_UNSPECIFIED" },
  { no: 1, name: "LOGICAL_OPERATOR_AND" },
  { no: 2, name: "LOGICAL_OPERATOR_OR" },
  { no: 3, name: "LOGICAL_OPERATOR_NOT" },
]);

/**
 * @generated from extension: string comparison_operator = 2030000;
 */
export const comparison_operator = proto3.makeExtension<EnumValueOptions, string>(
  "vespa.v1.comparison_operator", 
  EnumValueOptions, 
  { no: 2030000, kind: "scalar", T: 9 /* ScalarType.STRING */ },
);

/**
 * @generated from extension: string logical_operator = 2030001;
 */
export const logical_operator = proto3.makeExtension<EnumValueOptions, string>(
  "vespa.v1.logical_operator", 
  EnumValueOptions, 
  { no: 2030001, kind: "scalar", T: 9 /* ScalarType.STRING */ },
);

/**
 * @generated from extension: string column_type = 2030002;
 */
export const column_type = proto3.makeExtension<EnumValueOptions, string>(
  "vespa.v1.column_type", 
  EnumValueOptions, 
  { no: 2030002, kind: "scalar", T: 9 /* ScalarType.STRING */ },
);

/**
 * @generated from extension: string vespa_database_status_at_node = 2030003;
 */
export const vespa_database_status_at_node = proto3.makeExtension<EnumValueOptions, string>(
  "vespa.v1.vespa_database_status_at_node", 
  EnumValueOptions, 
  { no: 2030003, kind: "scalar", T: 9 /* ScalarType.STRING */ },
);

