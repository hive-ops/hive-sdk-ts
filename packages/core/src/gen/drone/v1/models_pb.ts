// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file drone/v1/models.proto (package drone.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { MemberType, RoleType } from "./enums_pb";
import { HivePermission, Pagination, PaginationRequest, ResponseMetadata } from "../../hive/v1/models_pb";
import { User } from "./user_pb";

/**
 * @generated from message drone.v1.Organization
 */
export class Organization extends Message<Organization> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  constructor(data?: PartialMessage<Organization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.Organization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Organization {
    return new Organization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJsonString(jsonString, options);
  }

  static equals(a: Organization | PlainMessage<Organization> | undefined, b: Organization | PlainMessage<Organization> | undefined): boolean {
    return proto3.util.equals(Organization, a, b);
  }
}

/**
 * @generated from message drone.v1.Project
 */
export class Project extends Message<Project> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string organization_uuid = 2;
   */
  organizationUuid = "";

  /**
   * @generated from field: string uuid = 3;
   */
  uuid = "";

  /**
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * @generated from field: string description = 5;
   */
  description = "";

  constructor(data?: PartialMessage<Project>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.Project";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Project {
    return new Project().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Project {
    return new Project().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Project {
    return new Project().fromJsonString(jsonString, options);
  }

  static equals(a: Project | PlainMessage<Project> | undefined, b: Project | PlainMessage<Project> | undefined): boolean {
    return proto3.util.equals(Project, a, b);
  }
}

/**
 * @generated from message drone.v1.SecureAppAccessToken
 */
export class SecureAppAccessToken extends Message<SecureAppAccessToken> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string app_uuid = 4;
   */
  appUuid = "";

  /**
   * @generated from field: string name = 5;
   */
  name = "";

  /**
   * @generated from field: string created_at = 6;
   */
  createdAt = "";

  /**
   * @generated from field: string last_used_at = 7;
   */
  lastUsedAt = "";

  constructor(data?: PartialMessage<SecureAppAccessToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.SecureAppAccessToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "app_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "last_used_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecureAppAccessToken {
    return new SecureAppAccessToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecureAppAccessToken {
    return new SecureAppAccessToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecureAppAccessToken {
    return new SecureAppAccessToken().fromJsonString(jsonString, options);
  }

  static equals(a: SecureAppAccessToken | PlainMessage<SecureAppAccessToken> | undefined, b: SecureAppAccessToken | PlainMessage<SecureAppAccessToken> | undefined): boolean {
    return proto3.util.equals(SecureAppAccessToken, a, b);
  }
}

/**
 * @generated from message drone.v1.SecureApp
 */
export class SecureApp extends Message<SecureApp> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt = "";

  /**
   * @generated from field: repeated drone.v1.SecureAppAccessToken access_tokens = 6;
   */
  accessTokens: SecureAppAccessToken[] = [];

  /**
   * @generated from field: repeated drone.v1.RoleBinding role_bindings = 7;
   */
  roleBindings: RoleBinding[] = [];

  constructor(data?: PartialMessage<SecureApp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.SecureApp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "access_tokens", kind: "message", T: SecureAppAccessToken, repeated: true },
    { no: 7, name: "role_bindings", kind: "message", T: RoleBinding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecureApp {
    return new SecureApp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecureApp {
    return new SecureApp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecureApp {
    return new SecureApp().fromJsonString(jsonString, options);
  }

  static equals(a: SecureApp | PlainMessage<SecureApp> | undefined, b: SecureApp | PlainMessage<SecureApp> | undefined): boolean {
    return proto3.util.equals(SecureApp, a, b);
  }
}

/**
 * @generated from message drone.v1.Role
 */
export class Role extends Message<Role> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: drone.v1.RoleType type = 4;
   */
  type = RoleType.UNSPECIFIED;

  /**
   * @generated from field: string name = 5;
   */
  name = "";

  /**
   * @generated from field: string description = 6;
   */
  description = "";

  /**
   * @generated from field: repeated hive.v1.HivePermission permissions = 7;
   */
  permissions: HivePermission[] = [];

  constructor(data?: PartialMessage<Role>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.Role";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(RoleType) },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "permissions", kind: "message", T: HivePermission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Role {
    return new Role().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Role {
    return new Role().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Role {
    return new Role().fromJsonString(jsonString, options);
  }

  static equals(a: Role | PlainMessage<Role> | undefined, b: Role | PlainMessage<Role> | undefined): boolean {
    return proto3.util.equals(Role, a, b);
  }
}

/**
 * *
 * RoleBinding represents a role that has been assigned to a user/secure app.
 *
 * @generated from message drone.v1.RoleBinding
 */
export class RoleBinding extends Message<RoleBinding> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string member_uuid = 4;
   */
  memberUuid = "";

  /**
   * @generated from field: drone.v1.MemberType member_type = 5;
   */
  memberType = MemberType.UNSPECIFIED;

  /**
   * @generated from field: string role_uuid = 6;
   */
  roleUuid = "";

  /**
   * @generated from field: drone.v1.RoleType role_type = 7;
   */
  roleType = RoleType.UNSPECIFIED;

  /**
   * If project_uuids is empty, the role is assigned to all projects
   *
   * @generated from field: repeated string project_uuids = 8;
   */
  projectUuids: string[] = [];

  /**
   * @generated from field: repeated hive.v1.HivePermission permissions = 9;
   */
  permissions: HivePermission[] = [];

  constructor(data?: PartialMessage<RoleBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.RoleBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "member_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "member_type", kind: "enum", T: proto3.getEnumType(MemberType) },
    { no: 6, name: "role_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "role_type", kind: "enum", T: proto3.getEnumType(RoleType) },
    { no: 8, name: "project_uuids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "permissions", kind: "message", T: HivePermission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoleBinding {
    return new RoleBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoleBinding {
    return new RoleBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoleBinding {
    return new RoleBinding().fromJsonString(jsonString, options);
  }

  static equals(a: RoleBinding | PlainMessage<RoleBinding> | undefined, b: RoleBinding | PlainMessage<RoleBinding> | undefined): boolean {
    return proto3.util.equals(RoleBinding, a, b);
  }
}

/**
 * @generated from message drone.v1.GetOrganizationsRequest
 */
export class GetOrganizationsRequest extends Message<GetOrganizationsRequest> {
  /**
   * @generated from field: hive.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  constructor(data?: PartialMessage<GetOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PaginationRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationsRequest {
    return new GetOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationsRequest {
    return new GetOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationsRequest {
    return new GetOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationsRequest | PlainMessage<GetOrganizationsRequest> | undefined, b: GetOrganizationsRequest | PlainMessage<GetOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationsRequest, a, b);
  }
}

/**
 * @generated from message drone.v1.GetOrganizationsResponse
 */
export class GetOrganizationsResponse extends Message<GetOrganizationsResponse> {
  /**
   * @generated from field: hive.v1.ResponseMetadata metadata = 1;
   */
  metadata?: ResponseMetadata;

  /**
   * @generated from field: hive.v1.Pagination pagination = 2;
   */
  pagination?: Pagination;

  /**
   * @generated from field: repeated drone.v1.Organization organizations = 3;
   */
  organizations: Organization[] = [];

  constructor(data?: PartialMessage<GetOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: ResponseMetadata },
    { no: 2, name: "pagination", kind: "message", T: Pagination },
    { no: 3, name: "organizations", kind: "message", T: Organization, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationsResponse {
    return new GetOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationsResponse {
    return new GetOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationsResponse {
    return new GetOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationsResponse | PlainMessage<GetOrganizationsResponse> | undefined, b: GetOrganizationsResponse | PlainMessage<GetOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(GetOrganizationsResponse, a, b);
  }
}

/**
 * @generated from message drone.v1.GetProjectsRequest
 */
export class GetProjectsRequest extends Message<GetProjectsRequest> {
  /**
   * @generated from field: hive.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: string organization_uuid = 2;
   */
  organizationUuid = "";

  constructor(data?: PartialMessage<GetProjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetProjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PaginationRequest },
    { no: 2, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProjectsRequest {
    return new GetProjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProjectsRequest {
    return new GetProjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProjectsRequest {
    return new GetProjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetProjectsRequest | PlainMessage<GetProjectsRequest> | undefined, b: GetProjectsRequest | PlainMessage<GetProjectsRequest> | undefined): boolean {
    return proto3.util.equals(GetProjectsRequest, a, b);
  }
}

/**
 * @generated from message drone.v1.GetProjectsResponse
 */
export class GetProjectsResponse extends Message<GetProjectsResponse> {
  /**
   * @generated from field: hive.v1.ResponseMetadata metadata = 1;
   */
  metadata?: ResponseMetadata;

  /**
   * @generated from field: hive.v1.Pagination pagination = 2;
   */
  pagination?: Pagination;

  /**
   * @generated from field: repeated drone.v1.Project projects = 3;
   */
  projects: Project[] = [];

  constructor(data?: PartialMessage<GetProjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetProjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: ResponseMetadata },
    { no: 2, name: "pagination", kind: "message", T: Pagination },
    { no: 3, name: "projects", kind: "message", T: Project, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProjectsResponse {
    return new GetProjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProjectsResponse {
    return new GetProjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProjectsResponse {
    return new GetProjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetProjectsResponse | PlainMessage<GetProjectsResponse> | undefined, b: GetProjectsResponse | PlainMessage<GetProjectsResponse> | undefined): boolean {
    return proto3.util.equals(GetProjectsResponse, a, b);
  }
}

/**
 * @generated from message drone.v1.GetSecureAppAccessTokenSecretRequest
 */
export class GetSecureAppAccessTokenSecretRequest extends Message<GetSecureAppAccessTokenSecretRequest> {
  /**
   * @generated from field: string token_hrn = 1;
   */
  tokenHrn = "";

  constructor(data?: PartialMessage<GetSecureAppAccessTokenSecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetSecureAppAccessTokenSecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token_hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecureAppAccessTokenSecretRequest {
    return new GetSecureAppAccessTokenSecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecureAppAccessTokenSecretRequest {
    return new GetSecureAppAccessTokenSecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecureAppAccessTokenSecretRequest {
    return new GetSecureAppAccessTokenSecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecureAppAccessTokenSecretRequest | PlainMessage<GetSecureAppAccessTokenSecretRequest> | undefined, b: GetSecureAppAccessTokenSecretRequest | PlainMessage<GetSecureAppAccessTokenSecretRequest> | undefined): boolean {
    return proto3.util.equals(GetSecureAppAccessTokenSecretRequest, a, b);
  }
}

/**
 * @generated from message drone.v1.GetSecureAppAccessTokenSecretResponse
 */
export class GetSecureAppAccessTokenSecretResponse extends Message<GetSecureAppAccessTokenSecretResponse> {
  /**
   * @generated from field: hive.v1.ResponseMetadata metadata = 1;
   */
  metadata?: ResponseMetadata;

  /**
   * @generated from field: string access_token_secret = 2;
   */
  accessTokenSecret = "";

  constructor(data?: PartialMessage<GetSecureAppAccessTokenSecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetSecureAppAccessTokenSecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: ResponseMetadata },
    { no: 2, name: "access_token_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecureAppAccessTokenSecretResponse {
    return new GetSecureAppAccessTokenSecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecureAppAccessTokenSecretResponse {
    return new GetSecureAppAccessTokenSecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecureAppAccessTokenSecretResponse {
    return new GetSecureAppAccessTokenSecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecureAppAccessTokenSecretResponse | PlainMessage<GetSecureAppAccessTokenSecretResponse> | undefined, b: GetSecureAppAccessTokenSecretResponse | PlainMessage<GetSecureAppAccessTokenSecretResponse> | undefined): boolean {
    return proto3.util.equals(GetSecureAppAccessTokenSecretResponse, a, b);
  }
}

/**
 * @generated from message drone.v1.GetSecureAppsRequest
 */
export class GetSecureAppsRequest extends Message<GetSecureAppsRequest> {
  /**
   * @generated from field: string organization_uuid = 1;
   */
  organizationUuid = "";

  constructor(data?: PartialMessage<GetSecureAppsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetSecureAppsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecureAppsRequest {
    return new GetSecureAppsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecureAppsRequest {
    return new GetSecureAppsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecureAppsRequest {
    return new GetSecureAppsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecureAppsRequest | PlainMessage<GetSecureAppsRequest> | undefined, b: GetSecureAppsRequest | PlainMessage<GetSecureAppsRequest> | undefined): boolean {
    return proto3.util.equals(GetSecureAppsRequest, a, b);
  }
}

/**
 * @generated from message drone.v1.GetSecureAppsResponse
 */
export class GetSecureAppsResponse extends Message<GetSecureAppsResponse> {
  /**
   * @generated from field: repeated drone.v1.SecureApp secure_apps = 1;
   */
  secureApps: SecureApp[] = [];

  constructor(data?: PartialMessage<GetSecureAppsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetSecureAppsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "secure_apps", kind: "message", T: SecureApp, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecureAppsResponse {
    return new GetSecureAppsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecureAppsResponse {
    return new GetSecureAppsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecureAppsResponse {
    return new GetSecureAppsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecureAppsResponse | PlainMessage<GetSecureAppsResponse> | undefined, b: GetSecureAppsResponse | PlainMessage<GetSecureAppsResponse> | undefined): boolean {
    return proto3.util.equals(GetSecureAppsResponse, a, b);
  }
}

/**
 * @generated from message drone.v1.GetSecureAppSelfRequest
 */
export class GetSecureAppSelfRequest extends Message<GetSecureAppSelfRequest> {
  constructor(data?: PartialMessage<GetSecureAppSelfRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetSecureAppSelfRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecureAppSelfRequest {
    return new GetSecureAppSelfRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecureAppSelfRequest {
    return new GetSecureAppSelfRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecureAppSelfRequest {
    return new GetSecureAppSelfRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecureAppSelfRequest | PlainMessage<GetSecureAppSelfRequest> | undefined, b: GetSecureAppSelfRequest | PlainMessage<GetSecureAppSelfRequest> | undefined): boolean {
    return proto3.util.equals(GetSecureAppSelfRequest, a, b);
  }
}

/**
 * @generated from message drone.v1.GetSecureAppSelfResponse
 */
export class GetSecureAppSelfResponse extends Message<GetSecureAppSelfResponse> {
  /**
   * @generated from field: hive.v1.ResponseMetadata metadata = 1;
   */
  metadata?: ResponseMetadata;

  /**
   * @generated from field: drone.v1.SecureApp app = 2;
   */
  app?: SecureApp;

  constructor(data?: PartialMessage<GetSecureAppSelfResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.GetSecureAppSelfResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: ResponseMetadata },
    { no: 2, name: "app", kind: "message", T: SecureApp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSecureAppSelfResponse {
    return new GetSecureAppSelfResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSecureAppSelfResponse {
    return new GetSecureAppSelfResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSecureAppSelfResponse {
    return new GetSecureAppSelfResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSecureAppSelfResponse | PlainMessage<GetSecureAppSelfResponse> | undefined, b: GetSecureAppSelfResponse | PlainMessage<GetSecureAppSelfResponse> | undefined): boolean {
    return proto3.util.equals(GetSecureAppSelfResponse, a, b);
  }
}

/**
 * @generated from message drone.v1.PublicHealthCheckRequest
 */
export class PublicHealthCheckRequest extends Message<PublicHealthCheckRequest> {
  constructor(data?: PartialMessage<PublicHealthCheckRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.PublicHealthCheckRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublicHealthCheckRequest {
    return new PublicHealthCheckRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublicHealthCheckRequest {
    return new PublicHealthCheckRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublicHealthCheckRequest {
    return new PublicHealthCheckRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PublicHealthCheckRequest | PlainMessage<PublicHealthCheckRequest> | undefined, b: PublicHealthCheckRequest | PlainMessage<PublicHealthCheckRequest> | undefined): boolean {
    return proto3.util.equals(PublicHealthCheckRequest, a, b);
  }
}

/**
 * @generated from message drone.v1.PublicHealthCheckResponse
 */
export class PublicHealthCheckResponse extends Message<PublicHealthCheckResponse> {
  /**
   * @generated from field: hive.v1.ResponseMetadata metadata = 1;
   */
  metadata?: ResponseMetadata;

  /**
   * e.g., "OK", "DEGRADED", "UNAVAILABLE"
   *
   * @generated from field: string status = 2;
   */
  status = "";

  /**
   * Additional information about the health status
   *
   * @generated from field: string message = 3;
   */
  message = "";

  constructor(data?: PartialMessage<PublicHealthCheckResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.PublicHealthCheckResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: ResponseMetadata },
    { no: 2, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublicHealthCheckResponse {
    return new PublicHealthCheckResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublicHealthCheckResponse {
    return new PublicHealthCheckResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublicHealthCheckResponse {
    return new PublicHealthCheckResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PublicHealthCheckResponse | PlainMessage<PublicHealthCheckResponse> | undefined, b: PublicHealthCheckResponse | PlainMessage<PublicHealthCheckResponse> | undefined): boolean {
    return proto3.util.equals(PublicHealthCheckResponse, a, b);
  }
}

/**
 * @generated from message drone.v1.OrganizationMember
 */
export class OrganizationMember extends Message<OrganizationMember> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: drone.v1.User user = 4;
   */
  user?: User;

  /**
   * @generated from field: repeated drone.v1.RoleBinding role_bindings = 5;
   */
  roleBindings: RoleBinding[] = [];

  constructor(data?: PartialMessage<OrganizationMember>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.OrganizationMember";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "user", kind: "message", T: User },
    { no: 5, name: "role_bindings", kind: "message", T: RoleBinding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationMember {
    return new OrganizationMember().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationMember {
    return new OrganizationMember().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationMember {
    return new OrganizationMember().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationMember | PlainMessage<OrganizationMember> | undefined, b: OrganizationMember | PlainMessage<OrganizationMember> | undefined): boolean {
    return proto3.util.equals(OrganizationMember, a, b);
  }
}

/**
 * @generated from message drone.v1.MemberInvitation
 */
export class MemberInvitation extends Message<MemberInvitation> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string inviter_email = 4;
   */
  inviterEmail = "";

  /**
   * @generated from field: string invitee_email = 5;
   */
  inviteeEmail = "";

  /**
   * @generated from field: string created_at = 6;
   */
  createdAt = "";

  /**
   * @generated from field: repeated drone.v1.InvitationRoleBinding role_bindings = 7;
   */
  roleBindings: InvitationRoleBinding[] = [];

  constructor(data?: PartialMessage<MemberInvitation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.MemberInvitation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "inviter_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "invitee_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "role_bindings", kind: "message", T: InvitationRoleBinding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MemberInvitation {
    return new MemberInvitation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MemberInvitation {
    return new MemberInvitation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MemberInvitation {
    return new MemberInvitation().fromJsonString(jsonString, options);
  }

  static equals(a: MemberInvitation | PlainMessage<MemberInvitation> | undefined, b: MemberInvitation | PlainMessage<MemberInvitation> | undefined): boolean {
    return proto3.util.equals(MemberInvitation, a, b);
  }
}

/**
 * @generated from message drone.v1.OrganizationMembership
 */
export class OrganizationMembership extends Message<OrganizationMembership> {
  /**
   * @generated from field: string organization_uuid = 1;
   */
  organizationUuid = "";

  /**
   * @generated from field: repeated drone.v1.OrganizationMember members = 2;
   */
  members: OrganizationMember[] = [];

  constructor(data?: PartialMessage<OrganizationMembership>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.OrganizationMembership";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "members", kind: "message", T: OrganizationMember, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationMembership | PlainMessage<OrganizationMembership> | undefined, b: OrganizationMembership | PlainMessage<OrganizationMembership> | undefined): boolean {
    return proto3.util.equals(OrganizationMembership, a, b);
  }
}

/**
 * This is a frontend service like a web or mobile app
 *
 * @generated from message drone.v1.PlatformApp
 */
export class PlatformApp extends Message<PlatformApp> {
  /**
   * @generated from field: string hrn = 1;
   */
  hrn = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt = "";

  constructor(data?: PartialMessage<PlatformApp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.PlatformApp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlatformApp {
    return new PlatformApp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlatformApp {
    return new PlatformApp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlatformApp {
    return new PlatformApp().fromJsonString(jsonString, options);
  }

  static equals(a: PlatformApp | PlainMessage<PlatformApp> | undefined, b: PlatformApp | PlainMessage<PlatformApp> | undefined): boolean {
    return proto3.util.equals(PlatformApp, a, b);
  }
}

/**
 * @generated from message drone.v1.OrganizationPermissions
 */
export class OrganizationPermissions extends Message<OrganizationPermissions> {
  /**
   * @generated from field: string organization_uuid = 1;
   */
  organizationUuid = "";

  /**
   * @generated from field: string user_hrn = 2;
   */
  userHrn = "";

  /**
   * @generated from field: repeated hive.v1.HivePermission permissions = 3;
   */
  permissions: HivePermission[] = [];

  constructor(data?: PartialMessage<OrganizationPermissions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.OrganizationPermissions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "permissions", kind: "message", T: HivePermission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationPermissions {
    return new OrganizationPermissions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationPermissions {
    return new OrganizationPermissions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationPermissions {
    return new OrganizationPermissions().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationPermissions | PlainMessage<OrganizationPermissions> | undefined, b: OrganizationPermissions | PlainMessage<OrganizationPermissions> | undefined): boolean {
    return proto3.util.equals(OrganizationPermissions, a, b);
  }
}

/**
 * @generated from message drone.v1.Self
 */
export class Self extends Message<Self> {
  /**
   * @generated from field: drone.v1.User user = 1;
   */
  user?: User;

  /**
   * @generated from field: repeated drone.v1.RoleBinding role_bindings = 2;
   */
  roleBindings: RoleBinding[] = [];

  /**
   * @generated from field: repeated drone.v1.MemberInvitation invitations = 3;
   */
  invitations: MemberInvitation[] = [];

  constructor(data?: PartialMessage<Self>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.Self";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
    { no: 2, name: "role_bindings", kind: "message", T: RoleBinding, repeated: true },
    { no: 3, name: "invitations", kind: "message", T: MemberInvitation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Self {
    return new Self().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Self {
    return new Self().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Self {
    return new Self().fromJsonString(jsonString, options);
  }

  static equals(a: Self | PlainMessage<Self> | undefined, b: Self | PlainMessage<Self> | undefined): boolean {
    return proto3.util.equals(Self, a, b);
  }
}

/**
 * @generated from message drone.v1.InvitationRoleBinding
 */
export class InvitationRoleBinding extends Message<InvitationRoleBinding> {
  /**
   * @generated from field: string role_uuid = 1;
   */
  roleUuid = "";

  /**
   * @generated from field: drone.v1.RoleType role_type = 2;
   */
  roleType = RoleType.UNSPECIFIED;

  /**
   * @generated from field: string project_uuids = 3;
   */
  projectUuids = "";

  constructor(data?: PartialMessage<InvitationRoleBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.InvitationRoleBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_type", kind: "enum", T: proto3.getEnumType(RoleType) },
    { no: 3, name: "project_uuids", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InvitationRoleBinding {
    return new InvitationRoleBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InvitationRoleBinding {
    return new InvitationRoleBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InvitationRoleBinding {
    return new InvitationRoleBinding().fromJsonString(jsonString, options);
  }

  static equals(a: InvitationRoleBinding | PlainMessage<InvitationRoleBinding> | undefined, b: InvitationRoleBinding | PlainMessage<InvitationRoleBinding> | undefined): boolean {
    return proto3.util.equals(InvitationRoleBinding, a, b);
  }
}

/**
 * @generated from message drone.v1.ProjectPermissions
 */
export class ProjectPermissions extends Message<ProjectPermissions> {
  /**
   * @generated from field: string project_uuid = 1;
   */
  projectUuid = "";

  /**
   * @generated from field: string user_hrn = 2;
   */
  userHrn = "";

  /**
   * @generated from field: repeated hive.v1.HivePermission permissions = 3;
   */
  permissions: HivePermission[] = [];

  constructor(data?: PartialMessage<ProjectPermissions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.ProjectPermissions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "permissions", kind: "message", T: HivePermission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectPermissions {
    return new ProjectPermissions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectPermissions {
    return new ProjectPermissions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectPermissions {
    return new ProjectPermissions().fromJsonString(jsonString, options);
  }

  static equals(a: ProjectPermissions | PlainMessage<ProjectPermissions> | undefined, b: ProjectPermissions | PlainMessage<ProjectPermissions> | undefined): boolean {
    return proto3.util.equals(ProjectPermissions, a, b);
  }
}

