// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file drone/v1/models.proto (package drone.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { HivePermission, HiveResourceIdentifier } from "../../hive/v1/models_pb.js";
import { MemberType, RoleType } from "./enums_pb.js";

/**
 * @generated from message drone.v1.Organization
 */
export class Organization extends Message<Organization> {
  /**
   * @generated from field: hive.v1.HiveResourceIdentifier hri = 1;
   */
  hri?: HiveResourceIdentifier;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  constructor(data?: PartialMessage<Organization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.Organization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hri", kind: "message", T: HiveResourceIdentifier },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Organization {
    return new Organization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJsonString(jsonString, options);
  }

  static equals(a: Organization | PlainMessage<Organization> | undefined, b: Organization | PlainMessage<Organization> | undefined): boolean {
    return proto3.util.equals(Organization, a, b);
  }
}

/**
 * @generated from message drone.v1.Project
 */
export class Project extends Message<Project> {
  /**
   * @generated from field: hive.v1.HiveResourceIdentifier hri = 1;
   */
  hri?: HiveResourceIdentifier;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * @generated from field: string description = 5;
   */
  description = "";

  constructor(data?: PartialMessage<Project>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.Project";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hri", kind: "message", T: HiveResourceIdentifier },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Project {
    return new Project().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Project {
    return new Project().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Project {
    return new Project().fromJsonString(jsonString, options);
  }

  static equals(a: Project | PlainMessage<Project> | undefined, b: Project | PlainMessage<Project> | undefined): boolean {
    return proto3.util.equals(Project, a, b);
  }
}

/**
 * @generated from message drone.v1.SecureAppAccessToken
 */
export class SecureAppAccessToken extends Message<SecureAppAccessToken> {
  /**
   * @generated from field: hive.v1.HiveResourceIdentifier hri = 1;
   */
  hri?: HiveResourceIdentifier;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string app_uuid = 4;
   */
  appUuid = "";

  /**
   * @generated from field: string name = 5;
   */
  name = "";

  /**
   * @generated from field: string created_at = 6;
   */
  createdAt = "";

  /**
   * @generated from field: string last_used_at = 7;
   */
  lastUsedAt = "";

  constructor(data?: PartialMessage<SecureAppAccessToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.SecureAppAccessToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hri", kind: "message", T: HiveResourceIdentifier },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "app_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "last_used_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecureAppAccessToken {
    return new SecureAppAccessToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecureAppAccessToken {
    return new SecureAppAccessToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecureAppAccessToken {
    return new SecureAppAccessToken().fromJsonString(jsonString, options);
  }

  static equals(a: SecureAppAccessToken | PlainMessage<SecureAppAccessToken> | undefined, b: SecureAppAccessToken | PlainMessage<SecureAppAccessToken> | undefined): boolean {
    return proto3.util.equals(SecureAppAccessToken, a, b);
  }
}

/**
 * @generated from message drone.v1.SecureApp
 */
export class SecureApp extends Message<SecureApp> {
  /**
   * @generated from field: hive.v1.HiveResourceIdentifier hri = 1;
   */
  hri?: HiveResourceIdentifier;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt = "";

  /**
   * @generated from field: repeated drone.v1.SecureAppAccessToken access_tokens = 5;
   */
  accessTokens: SecureAppAccessToken[] = [];

  /**
   * @generated from field: repeated drone.v1.RoleBinding role_bindings = 6;
   */
  roleBindings: RoleBinding[] = [];

  constructor(data?: PartialMessage<SecureApp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.SecureApp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hri", kind: "message", T: HiveResourceIdentifier },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "access_tokens", kind: "message", T: SecureAppAccessToken, repeated: true },
    { no: 6, name: "role_bindings", kind: "message", T: RoleBinding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecureApp {
    return new SecureApp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecureApp {
    return new SecureApp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecureApp {
    return new SecureApp().fromJsonString(jsonString, options);
  }

  static equals(a: SecureApp | PlainMessage<SecureApp> | undefined, b: SecureApp | PlainMessage<SecureApp> | undefined): boolean {
    return proto3.util.equals(SecureApp, a, b);
  }
}

/**
 * @generated from message drone.v1.UserAccount
 */
export class UserAccount extends Message<UserAccount> {
  /**
   * @generated from field: string uid = 1;
   */
  uid = "";

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * @generated from field: string sign_in_provider = 4;
   */
  signInProvider = "";

  /**
   * @generated from field: string email = 5;
   */
  email = "";

  /**
   * @generated from field: string phone_number = 6;
   */
  phoneNumber = "";

  constructor(data?: PartialMessage<UserAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.UserAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sign_in_provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserAccount {
    return new UserAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserAccount {
    return new UserAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserAccount {
    return new UserAccount().fromJsonString(jsonString, options);
  }

  static equals(a: UserAccount | PlainMessage<UserAccount> | undefined, b: UserAccount | PlainMessage<UserAccount> | undefined): boolean {
    return proto3.util.equals(UserAccount, a, b);
  }
}

/**
 * @generated from message drone.v1.User
 */
export class User extends Message<User> {
  /**
   * @generated from field: hive.v1.HiveResourceIdentifier hri = 1;
   */
  hri?: HiveResourceIdentifier;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: repeated drone.v1.UserAccount accounts = 3;
   */
  accounts: UserAccount[] = [];

  constructor(data?: PartialMessage<User>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.User";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hri", kind: "message", T: HiveResourceIdentifier },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "accounts", kind: "message", T: UserAccount, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User {
    return new User().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User {
    return new User().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User {
    return new User().fromJsonString(jsonString, options);
  }

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean {
    return proto3.util.equals(User, a, b);
  }
}

/**
 * @generated from message drone.v1.Role
 */
export class Role extends Message<Role> {
  /**
   * @generated from field: hive.v1.HiveResourceIdentifier hri = 1;
   */
  hri?: HiveResourceIdentifier;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: drone.v1.RoleType type = 4;
   */
  type = RoleType.UNSPECIFIED;

  /**
   * @generated from field: string name = 5;
   */
  name = "";

  /**
   * @generated from field: string description = 6;
   */
  description = "";

  /**
   * @generated from field: repeated hive.v1.HivePermission permissions = 7;
   */
  permissions: HivePermission[] = [];

  constructor(data?: PartialMessage<Role>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.Role";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hri", kind: "message", T: HiveResourceIdentifier },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(RoleType) },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "permissions", kind: "message", T: HivePermission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Role {
    return new Role().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Role {
    return new Role().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Role {
    return new Role().fromJsonString(jsonString, options);
  }

  static equals(a: Role | PlainMessage<Role> | undefined, b: Role | PlainMessage<Role> | undefined): boolean {
    return proto3.util.equals(Role, a, b);
  }
}

/**
 * *
 * RoleBinding represents a role that has been assigned to a user/secure app.
 *
 * @generated from message drone.v1.RoleBinding
 */
export class RoleBinding extends Message<RoleBinding> {
  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string member_uuid = 4;
   */
  memberUuid = "";

  /**
   * @generated from field: drone.v1.MemberType member_type = 5;
   */
  memberType = MemberType.UNSPECIFIED;

  /**
   * @generated from field: string role_uuid = 6;
   */
  roleUuid = "";

  /**
   * @generated from field: drone.v1.RoleType role_type = 7;
   */
  roleType = RoleType.UNSPECIFIED;

  /**
   * If project_uuids is empty, the role is assigned to all projects
   *
   * @generated from field: repeated string project_uuids = 8;
   */
  projectUuids: string[] = [];

  /**
   * @generated from field: repeated hive.v1.HivePermission permissions = 9;
   */
  permissions: HivePermission[] = [];

  constructor(data?: PartialMessage<RoleBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.RoleBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "member_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "member_type", kind: "enum", T: proto3.getEnumType(MemberType) },
    { no: 6, name: "role_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "role_type", kind: "enum", T: proto3.getEnumType(RoleType) },
    { no: 8, name: "project_uuids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 9, name: "permissions", kind: "message", T: HivePermission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoleBinding {
    return new RoleBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoleBinding {
    return new RoleBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoleBinding {
    return new RoleBinding().fromJsonString(jsonString, options);
  }

  static equals(a: RoleBinding | PlainMessage<RoleBinding> | undefined, b: RoleBinding | PlainMessage<RoleBinding> | undefined): boolean {
    return proto3.util.equals(RoleBinding, a, b);
  }
}

/**
 * @generated from message drone.v1.OrganizationMember
 */
export class OrganizationMember extends Message<OrganizationMember> {
  /**
   * @generated from field: hive.v1.HiveResourceIdentifier hri = 1;
   */
  hri?: HiveResourceIdentifier;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: drone.v1.User user = 4;
   */
  user?: User;

  /**
   * @generated from field: repeated drone.v1.RoleBinding role_bindings = 5;
   */
  roleBindings: RoleBinding[] = [];

  constructor(data?: PartialMessage<OrganizationMember>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.OrganizationMember";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hri", kind: "message", T: HiveResourceIdentifier },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "user", kind: "message", T: User },
    { no: 5, name: "role_bindings", kind: "message", T: RoleBinding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationMember {
    return new OrganizationMember().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationMember {
    return new OrganizationMember().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationMember {
    return new OrganizationMember().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationMember | PlainMessage<OrganizationMember> | undefined, b: OrganizationMember | PlainMessage<OrganizationMember> | undefined): boolean {
    return proto3.util.equals(OrganizationMember, a, b);
  }
}

/**
 * @generated from message drone.v1.MemberInvitation
 */
export class MemberInvitation extends Message<MemberInvitation> {
  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string inviter_email = 4;
   */
  inviterEmail = "";

  /**
   * @generated from field: string invitee_email = 5;
   */
  inviteeEmail = "";

  /**
   * @generated from field: string created_at = 6;
   */
  createdAt = "";

  /**
   * @generated from field: repeated drone.v1.InvitationRoleBinding role_bindings = 7;
   */
  roleBindings: InvitationRoleBinding[] = [];

  constructor(data?: PartialMessage<MemberInvitation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.MemberInvitation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "inviter_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "invitee_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "role_bindings", kind: "message", T: InvitationRoleBinding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MemberInvitation {
    return new MemberInvitation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MemberInvitation {
    return new MemberInvitation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MemberInvitation {
    return new MemberInvitation().fromJsonString(jsonString, options);
  }

  static equals(a: MemberInvitation | PlainMessage<MemberInvitation> | undefined, b: MemberInvitation | PlainMessage<MemberInvitation> | undefined): boolean {
    return proto3.util.equals(MemberInvitation, a, b);
  }
}

/**
 * @generated from message drone.v1.OrganizationMembership
 */
export class OrganizationMembership extends Message<OrganizationMembership> {
  /**
   * @generated from field: string organization_uuid = 1;
   */
  organizationUuid = "";

  /**
   * @generated from field: repeated drone.v1.OrganizationMember members = 2;
   */
  members: OrganizationMember[] = [];

  constructor(data?: PartialMessage<OrganizationMembership>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.OrganizationMembership";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "members", kind: "message", T: OrganizationMember, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationMembership | PlainMessage<OrganizationMembership> | undefined, b: OrganizationMembership | PlainMessage<OrganizationMembership> | undefined): boolean {
    return proto3.util.equals(OrganizationMembership, a, b);
  }
}

/**
 * This is a frontend service like a web or mobile app
 *
 * @generated from message drone.v1.PlatformApp
 */
export class PlatformApp extends Message<PlatformApp> {
  /**
   * @generated from field: hive.v1.HiveResourceIdentifier hri = 1;
   */
  hri?: HiveResourceIdentifier;

  /**
   * @generated from field: string uuid = 2;
   */
  uuid = "";

  /**
   * @generated from field: string organization_uuid = 3;
   */
  organizationUuid = "";

  /**
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt = "";

  constructor(data?: PartialMessage<PlatformApp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.PlatformApp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hri", kind: "message", T: HiveResourceIdentifier },
    { no: 2, name: "uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlatformApp {
    return new PlatformApp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlatformApp {
    return new PlatformApp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlatformApp {
    return new PlatformApp().fromJsonString(jsonString, options);
  }

  static equals(a: PlatformApp | PlainMessage<PlatformApp> | undefined, b: PlatformApp | PlainMessage<PlatformApp> | undefined): boolean {
    return proto3.util.equals(PlatformApp, a, b);
  }
}

/**
 * @generated from message drone.v1.OrganizationPermissions
 */
export class OrganizationPermissions extends Message<OrganizationPermissions> {
  /**
   * @generated from field: string organization_uuid = 1;
   */
  organizationUuid = "";

  /**
   * @generated from field: string user_hrn = 2;
   */
  userHrn = "";

  /**
   * @generated from field: repeated hive.v1.HivePermission permissions = 3;
   */
  permissions: HivePermission[] = [];

  constructor(data?: PartialMessage<OrganizationPermissions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.OrganizationPermissions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "permissions", kind: "message", T: HivePermission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationPermissions {
    return new OrganizationPermissions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationPermissions {
    return new OrganizationPermissions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationPermissions {
    return new OrganizationPermissions().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationPermissions | PlainMessage<OrganizationPermissions> | undefined, b: OrganizationPermissions | PlainMessage<OrganizationPermissions> | undefined): boolean {
    return proto3.util.equals(OrganizationPermissions, a, b);
  }
}

/**
 * @generated from message drone.v1.Self
 */
export class Self extends Message<Self> {
  /**
   * @generated from field: drone.v1.User user = 1;
   */
  user?: User;

  /**
   * @generated from field: repeated drone.v1.RoleBinding role_bindings = 2;
   */
  roleBindings: RoleBinding[] = [];

  /**
   * @generated from field: repeated drone.v1.MemberInvitation invitations = 3;
   */
  invitations: MemberInvitation[] = [];

  constructor(data?: PartialMessage<Self>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.Self";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
    { no: 2, name: "role_bindings", kind: "message", T: RoleBinding, repeated: true },
    { no: 3, name: "invitations", kind: "message", T: MemberInvitation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Self {
    return new Self().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Self {
    return new Self().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Self {
    return new Self().fromJsonString(jsonString, options);
  }

  static equals(a: Self | PlainMessage<Self> | undefined, b: Self | PlainMessage<Self> | undefined): boolean {
    return proto3.util.equals(Self, a, b);
  }
}

/**
 * @generated from message drone.v1.InvitationRoleBinding
 */
export class InvitationRoleBinding extends Message<InvitationRoleBinding> {
  /**
   * @generated from field: string role_uuid = 1;
   */
  roleUuid = "";

  /**
   * @generated from field: drone.v1.RoleType role_type = 2;
   */
  roleType = RoleType.UNSPECIFIED;

  /**
   * @generated from field: string project_uuids = 3;
   */
  projectUuids = "";

  constructor(data?: PartialMessage<InvitationRoleBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.InvitationRoleBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_type", kind: "enum", T: proto3.getEnumType(RoleType) },
    { no: 3, name: "project_uuids", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InvitationRoleBinding {
    return new InvitationRoleBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InvitationRoleBinding {
    return new InvitationRoleBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InvitationRoleBinding {
    return new InvitationRoleBinding().fromJsonString(jsonString, options);
  }

  static equals(a: InvitationRoleBinding | PlainMessage<InvitationRoleBinding> | undefined, b: InvitationRoleBinding | PlainMessage<InvitationRoleBinding> | undefined): boolean {
    return proto3.util.equals(InvitationRoleBinding, a, b);
  }
}

/**
 * @generated from message drone.v1.ProjectPermissions
 */
export class ProjectPermissions extends Message<ProjectPermissions> {
  /**
   * @generated from field: string project_uuid = 1;
   */
  projectUuid = "";

  /**
   * @generated from field: string user_hrn = 2;
   */
  userHrn = "";

  /**
   * @generated from field: repeated hive.v1.HivePermission permissions = 3;
   */
  permissions: HivePermission[] = [];

  constructor(data?: PartialMessage<ProjectPermissions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "drone.v1.ProjectPermissions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_hrn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "permissions", kind: "message", T: HivePermission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProjectPermissions {
    return new ProjectPermissions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProjectPermissions {
    return new ProjectPermissions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProjectPermissions {
    return new ProjectPermissions().fromJsonString(jsonString, options);
  }

  static equals(a: ProjectPermissions | PlainMessage<ProjectPermissions> | undefined, b: ProjectPermissions | PlainMessage<ProjectPermissions> | undefined): boolean {
    return proto3.util.equals(ProjectPermissions, a, b);
  }
}

